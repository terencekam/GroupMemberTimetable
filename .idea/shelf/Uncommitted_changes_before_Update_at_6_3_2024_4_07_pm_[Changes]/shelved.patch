Index: src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cos.hudie.hk.groupTimeTable.Database.SQLite;\r\n\r\nimport cos.hudie.hk.groupTimeTable.Database.ImportGroup;\r\nimport cos.hudie.hk.groupTimeTable.GroupManager.Group;\r\nimport cos.hudie.hk.groupTimeTable.GroupManager.Memo;\r\nimport cos.hudie.hk.groupTimeTable.Main;\r\nimport cos.hudie.hk.groupTimeTable.Student;\r\n\r\nimport java.sql.*;\r\nimport java.time.DayOfWeek;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport static cos.hudie.hk.groupTimeTable.GroupManager.GroupMemberManager.IsCorrectTimeTable;\r\n\r\npublic class Query implements cos.hudie.hk.groupTimeTable.Database.Query {\r\n    private static Connection connection;\r\n\r\n\r\n\r\n    public Query() {\r\n        try {\r\n            connection = DriverManager.getConnection(\"jdbc:sqlite:Members.db\");\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"CREATE TABLE IF NOT EXISTS GP(LectureID TEXT, GroupID INTEGER NOT NULL , LectureName TEXT , TutorGroup TEXT , PRIMARY KEY(GroupID))\");\r\n            statement.execute(\"CREATE TABLE IF NOT EXISTS Memo(MemoID INTEGER NOT NULL, GroupID INTEGER NOT NULL, MemoName TEXT\" +\r\n                    \", StartingTime DATETIME, EndingTime DATETIME, Description TEXT ,FOREIGN KEY(GroupID) REFERENCES GP(GroupID) , PRIMARY KEY(MemoID))\");\r\n            statement.execute(\"CREATE TABLE IF NOT EXISTS Student(StudentID TEXT NOT NULL, StudentName TEXT , MONDAY TEXT , TUESDAY TEXT , WEDNESDAY TEXT, THURSDAY TEXT , FRIDAY TEXT, SATURDAY TEXT , SUNDAY TEXT , PRIMARY KEY(StudentID))\");\r\n            statement.execute(\"CREATE TABLE IF NOT EXISTS GroupMember(GroupID INTEGER NOT NULL, StudentID TEXT NOT NULL, IsGroupLeader BIT ,FOREIGN KEY(GroupID) REFERENCES GP(GroupID) , FOREIGN KEY(StudentID) REFERENCES Student(StudentID), PRIMARY KEY(GroupID , StudentID))\");\r\n\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public List<ImportGroup> getGroupList() {\r\n        List<ImportGroup> importGroups = new ArrayList<>();\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT TutorGroup , GroupID FROM GP\");\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                importGroups.add(new ImportGroup(resultSet.getString(\"TutorGroup\"), resultSet.getInt(\"GroupID\")));\r\n            }\r\n\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return importGroups;\r\n    }\r\n\r\n    @Override\r\n    public int CreateGroup(Group group) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"INSERT INTO GP(LectureID, LectureName , TutorGroup) VALUES('%s' , '%s' , '%s')\".formatted(group.getLectureID(), group.getLectureName(), group.getTutorGroup()));\r\n            statement.execute(\"SELECT MAX(GroupID) FROM GP\");\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                group.setGroupID(resultSet.getInt(\"MAX(GroupID)\"));\r\n                group.StudentList.forEach(e -> {\r\n                    try {\r\n                        statement.execute(\"INSERT INTO GroupMember VALUES('%s' , '%s' , '%s')\".formatted(group.getGroupID(), e.getStudentID(), \"FALSE\"));\r\n\r\n                        List<StringBuilder> stringBuilderList = new ArrayList<>();\r\n                        for (List<Integer> integers : e.TimeTable) {\r\n                            StringBuilder stringBuilder = new StringBuilder();\r\n                            integers.forEach(s -> stringBuilder.append(s).append(\" \"));\r\n                        }\r\n                        statement.execute(\"INSERT INTO Student VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')\".formatted(e.getStudentID(), e.getStudentName(), stringBuilderList.get(0)\r\n                                , stringBuilderList.get(1), stringBuilderList.get(2), stringBuilderList.get(3), stringBuilderList.get(4), stringBuilderList.get(5)));\r\n                    } catch (SQLException ex) {\r\n                        throw new RuntimeException(ex);\r\n                    }\r\n                });\r\n                for (Memo memo : group.MemoList) {\r\n                    statement.execute(\"INSERT INTO Memo(GroupID, MemoName , StartingTime , EndingTime , Description) VALUES ('%s' ,'%s' ,'%s' ,'%s' ,'%s')\".formatted(group.getGroupID(), memo.getName()\r\n                            , memo.getStartTime(), memo.getEndTime(), memo.getDescription()));\r\n                }\r\n\r\n            }\r\n            return group.getGroupID();\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    @Override\r\n    public boolean UpdateGroup(Group group) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"UPDATE GP SET LectureID = '%s' , LectureName =  '%s' , TutorGroup = '%s'\".formatted(group.getLectureID(), group.getLectureName(), group.getTutorGroup()));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean hasGroup(int index) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT GroupID FROM GP WHERE GroupID=%d\".formatted(index));\r\n            ResultSet resultSet = statement.getResultSet();\r\n\r\n            return resultSet.next();\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean hasStudent(String StudentID) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT * FROM Student WHERE StudentID = '%s'\".formatted(StudentID));\r\n            ResultSet resultSet = statement.getResultSet();\r\n\r\n            return resultSet.next();\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public Student getStudent(String StudentID) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT * FROM Student WHERE StudentID = '%s'\".formatted(StudentID));\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                Student student = new Student(resultSet.getString(\"StudentName\"), resultSet.getString(\"StudentID\"));\r\n                List list = new ArrayList();\r\n                for (DayOfWeek string : DayOfWeek.values()) {\r\n                    if (!resultSet.getString(string.toString()).isEmpty()) {\r\n                        Arrays.asList(resultSet.getString(string.toString()).split(\" \")).forEach(s -> list.add(Integer.parseInt(s)));\r\n                        if (IsCorrectTimeTable(list)) {\r\n                            student.TimeTable.add(new ArrayList<>(list));\r\n                        } else {\r\n                            System.out.printf(\"Student %s of %s timetable has been ignored since a wrong data has been inputted , You may add the time session by using edit function on the menu later on.\", student.getStudentName(), string);\r\n                        }\r\n                    } else {\r\n                        student.TimeTable.add(new ArrayList<>());\r\n                    }\r\n                    list.clear();\r\n\r\n                }\r\n                return student;\r\n            }\r\n\r\n\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public boolean addStudent(Student student) {\r\n        try {\r\n\r\n            Statement statement = connection.createStatement();\r\n            StringBuilder stringBuilder = new StringBuilder();\r\n            var i = 1;\r\n            for (List<Integer> integers : student.TimeTable) {\r\n                stringBuilder.append(\",'\");\r\n                integers.forEach(e -> stringBuilder.append(e).append(\" \"));\r\n                stringBuilder.replace(stringBuilder.length() - 1, stringBuilder.length() - 1, \"'\");\r\n                i++;\r\n            }\r\n            statement.execute(\"INSERT INTO Student VALUES('\" + student.getStudentID() + \"'\" + \", '\" + student.getStudentName() + \"'\"\r\n                    + stringBuilder + \")\");\r\n            // session time usage table\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean updateStudent(Student student) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            StringBuilder stringBuilder = new StringBuilder();\r\n            for (int i = 1; i <= DayOfWeek.values().length; i++) {\r\n                stringBuilder.append(\", \").append(DayOfWeek.of(i)).append(\"='\");\r\n                student.TimeTable.get(i - 1).forEach(e -> stringBuilder.append(e).append(\" \"));\r\n                stringBuilder.replace(stringBuilder.length() - 1, stringBuilder.length() - 1, \"'\");\r\n\r\n            }\r\n            System.out.println((\"UPDATE Student SET StudentName = '%s' %s WHERE StudentID = '%s'\".formatted(student.getStudentName(), stringBuilder, student.getStudentID())));\r\n            statement.execute(\"UPDATE Student SET StudentName = '%s' %s WHERE StudentID = '%s'\".formatted(student.getStudentName(), stringBuilder, student.getStudentID()));\r\n            // session time usage table\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public Group getGroup(int index) {\r\n        Group group = null;\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT * FROM GP WHERE GroupID = '%s'\".formatted(index));\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                group = new Group(resultSet.getString(\"LectureID\"), resultSet.getString(\"LectureName\"), resultSet.getString(\"TutorGroup\"), resultSet.getInt(\"GroupID\"));\r\n                statement.execute(\"SELECT Student.StudentID FROM Student JOIN GroupMember ON Student.StudentID = GroupMember.StudentID WHERE GroupMember.GroupID = %d\".formatted(index));\r\n                resultSet = statement.getResultSet();\r\n                while (resultSet.next()) {\r\n                    group.StudentList.add(getStudent(resultSet.getString(\"StudentID\")));\r\n                }\r\n                statement.execute(\"SELECT MemoID , MemoName , StartingTime , EndingTime , Description FROM Memo WHERE GroupID = '%s'\".formatted(index));\r\n                resultSet = statement.getResultSet();\r\n                while (resultSet.next()) {\r\n                    group.MemoList.add(new Memo(resultSet.getString(\"MemoName\"), LocalDateTime.parse(resultSet.getString(\"StartingTime\")), LocalDateTime.parse(resultSet.getString(\"EndingTime\")), resultSet.getString(\"Description\"), resultSet.getInt(\"MemoID\")));\r\n                }\r\n            }\r\n\r\n            return group;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return group;\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroup(int index) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"DELETE FROM Memo WHERE GroupID = %s\".formatted(index));\r\n            statement.execute(\"DELETE FROM GroupMember WHERE GroupID = %s\".formatted(index));\r\n            statement.execute(\"DELETE FROM GP WHERE GroupID = %s\".formatted(index));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroup(Group group) {\r\n        return deleteGroup(group.getGroupID());\r\n    }\r\n\r\n    public boolean deleteStudent(String StudentID) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"DELETE FROM GroupMember WHERE StudentID = %s\".formatted(StudentID));\r\n            statement.execute(\"DELETE FROM Student WHERE StudentID = %s\".formatted(StudentID));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteStudent(Student student) {\r\n        return deleteStudent(student.getStudentID());\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroupMember(Group group, Student student) {\r\n        return deleteGroupMember(group.getGroupID(), student.getStudentID());\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroupMember(Group group, String StudentID) {\r\n        return deleteGroupMember(group.getGroupID(), StudentID);\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroupMember(int GroupIndex, Student student) {\r\n        return deleteGroupMember(GroupIndex, student.getStudentID());\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteGroupMember(int GroupIndex, String StudentID) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"DELETE FROM GroupMember WHERE StudentID = '%s' AND GroupID = %d\".formatted(StudentID, GroupIndex));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addGroupMember(Group group, Student student) {\r\n        return addGroupMember(group.getGroupID(), student);\r\n    }\r\n\r\n    @Override\r\n    public boolean addGroupMember(int GroupIndex, Student student) {\r\n        try {\r\n            if (!hasStudent(student.getStudentID())) {\r\n                addStudent(student);\r\n            }\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"INSERT INTO GroupMember VALUES(%s , '%s' , 0)\".formatted(GroupIndex, student.getStudentID()));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean updateGroupMember(Group group, Student student) {\r\n        return updateGroupMember(group.getGroupID(), student);\r\n    }\r\n\r\n    @Override\r\n    public boolean updateGroupMember(int GroupIndex, Student student) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            updateStudent(student);\r\n            if (student.isGroupLeader()) {\r\n                statement.execute(\"SELECT * FROM GroupMember WHERE GroupID = '%d' AND IsGroupLeader = 1\".formatted(GroupIndex));\r\n                ResultSet resultSet = statement.getResultSet();\r\n                if (resultSet.next()) {\r\n                    statement.execute(\"UPDATE GroupMember SET IsGroupLeader = 0 WHERE GroupID = '%d' AND IsGroupLeader = 1\".formatted(GroupIndex));\r\n                }\r\n                statement.execute(\"UPDATE GroupMember SET IsGroupLeader = 1 WHERE GroupID = '%d' AND StudentID = '%s'\".formatted(GroupIndex, student.getStudentID()));\r\n            }\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean hasGroupMember(String StudentID, int GroupIndex) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT * FROM GroupMember WHERE StudentID = '%s' AND GroupID = '%d'\".formatted(StudentID, GroupIndex));\r\n            ResultSet resultSet = statement.getResultSet();\r\n\r\n            return resultSet.next();\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean hasGroupMember(String StudentID, Group group) {\r\n        return hasGroupMember(StudentID, group.getGroupID());\r\n    }\r\n\r\n    @Override\r\n    public boolean deleteMemo(int MemoID) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"DELETE FROM Memo WHERE MemoID = %d\".formatted(MemoID));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addMemo(Group group, Memo memo) {\r\n        return addMemo(group.getGroupID(), memo);\r\n    }\r\n\r\n    @Override\r\n    public boolean addMemo(int GroupID, Memo memo) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"INSERT INTO Memo(GroupID , MemoName , StartingTime , EndingTime , Description) VALUES (%d , '%s' , '%s' , '%s' , '%s')\".formatted(GroupID, memo.getName(), memo.getStartTime(), memo.getEndTime(), memo.getDescription()));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean editMemo(int GroupID, Memo memo) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"UPDATE Memo SET MemoName = '%s' , StartingTime = '%s' , EndingTime = '%s' , Description = '%s' WHERE MemoID = %d\".formatted(memo.getName(), memo.getStartTime(), memo.getEndTime(), memo.getDescription(), memo.getMemoID()));\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean editMemo(Group group, Memo memo) {\r\n        return editMemo(group.getGroupID(), memo);\r\n    }\r\n\r\n    @Override\r\n    public boolean hasMemo(int MemoId) {\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT * FROM Memo WHERE MemoID = %d\".formatted(MemoId));\r\n            ResultSet resultSet = statement.getResultSet();\r\n\r\n            return resultSet.next();\r\n\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public Memo getMemo(int MemoID) {\r\n        Memo memo = null;\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT MemoID , MemoName , StartingTime , EndingTime , Description FROM Memo WHERE memoID = '%s'\".formatted(MemoID));\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                memo = new Memo(resultSet.getString(\"MemoName\"), LocalDateTime.parse(resultSet.getString(\"StartingTime\")), LocalDateTime.parse(resultSet.getString(\"EndingTime\")), resultSet.getString(\"Description\"), resultSet.getInt(\"MemoID\"));\r\n\r\n                return memo;\r\n            }\r\n\r\n\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return memo;\r\n    }\r\n\r\n    @Override\r\n    public List<Student> getAllStudent() {\r\n        List<Student> studentList = new ArrayList<>();\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            statement.execute(\"SELECT StudentID FROM Student\");\r\n            ResultSet resultSet = statement.getResultSet();\r\n            while (resultSet.next()) {\r\n                studentList.add(getStudent(resultSet.getString(\"StudentID\")));\r\n            }\r\n\r\n            return studentList;\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n        return studentList;\r\n    }\r\n\r\n    @Override\r\n    public void connectionClose() {\r\n        try {\r\n            connection.close();\r\n        } catch (SQLException e) {\r\n            Main.contactDeveloper(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java b/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java
--- a/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java	(revision 0db71fe8b6fcd9b25960b279d32301751526781d)
+++ b/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java	(date 1709711308337)
@@ -17,9 +17,6 @@
 
 public class Query implements cos.hudie.hk.groupTimeTable.Database.Query {
     private static Connection connection;
-
-
-
     public Query() {
         try {
             connection = DriverManager.getConnection("jdbc:sqlite:Members.db");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"GroupMemberTimetable:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fce70000-cd19-4f87-8966-e8b21d65912b\" name=\"Changes\" comment=\"update dependencies\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/GroupMemberTimetable.jar\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/Members.mv.db\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/config.yml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/GroupManager/GroupMemberManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/GroupManager/GroupMemberManager.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;terencekam&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GitHubPullRequestState\">{\r\n  &quot;prStates&quot;: [\r\n  ]\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/terencekam/GroupMemberTimetable.git&quot;,\r\n    &quot;accountId&quot;: &quot;7e9ff46d-d4cb-4295-ab27-e74a919eb6da&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2dFikpnZvIl4QewI4h7ad6YKYDi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Unnamed.executor&quot;: &quot;Run&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Maven.GroupMemberTimetable [-B,package,--file...].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [clean,install...].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [install:install-file...].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-install-plugin:3.1.1:install].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:jar].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:test-jar].executor&quot;: &quot;Run&quot;,\r\n    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources].executor&quot;: &quot;Run&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;true&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/TerenceKam/Documents/GitHub/GroupMemberTimetable&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15294118&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"ImportExportFile.TargetDir.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"mvn clean install -Dmaven.test.skip=true\" />\r\n      <command value=\"mvn install:install-file C:\\Users\\TerenceKam\\Downloads\\lib\" />\r\n      <command value=\"mvn install:install-file C:\\Users\\TerenceKam\\Downloads\\lib\\h2-2.2.224.jar\" />\r\n      <command value=\"mvn install:install-file -Dfile=&quot;C:\\Users\\TerenceKam\\Downloads\\lib\\h2-2.2.224.jar&quot;\" />\r\n      <command value=\"mvn install:install-file -Dfile=C:\\Users\\TerenceKam\\Downloads\\lib\\h2-2.2.224.jar\" />\r\n      <command value=\"mvn -B package --file pom.xml \" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"INCLUDE_PROVIDED_SCOPE\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"cos.hudie.hk.groupTimeTable.Main\" />\r\n      <module name=\"GroupMemberTimetable\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-e293885f7bc4-JavaScript-IU-241.11761.10\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fce70000-cd19-4f87-8966-e8b21d65912b\" name=\"Changes\" comment=\"\" />\r\n      <created>1709610374481</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1709610374481</updated>\r\n      <workItem from=\"1709610378669\" duration=\"709000\" />\r\n      <workItem from=\"1709611101803\" duration=\"4989000\" />\r\n      <workItem from=\"1709625235613\" duration=\"410000\" />\r\n      <workItem from=\"1709625697126\" duration=\"12469000\" />\r\n      <workItem from=\"1709650974912\" duration=\"3789000\" />\r\n      <workItem from=\"1709657781622\" duration=\"3730000\" />\r\n      <workItem from=\"1709700316072\" duration=\"344000\" />\r\n      <workItem from=\"1709708556550\" duration=\"1380000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"/\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709625627950</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709625627950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"/\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709651163903</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709651163903</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"/\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709651616542</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709651616542</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update dependencies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709658461301</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709658461301</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"update dependencies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709659226404</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709659226404</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"update dependencies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709659756436</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709659756436</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"update dependencies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709660092405</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709660092405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"update dependencies\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709660292726</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709660292726</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"/\" />\r\n    <MESSAGE value=\"update dependencies\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update dependencies\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0db71fe8b6fcd9b25960b279d32301751526781d)
+++ b/.idea/workspace.xml	(date 1709712445887)
@@ -10,11 +10,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="fce70000-cd19-4f87-8966-e8b21d65912b" name="Changes" comment="update dependencies">
+      <change afterPath="$PROJECT_DIR$/src/main/resources/META-INF/MANIFEST.MF" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/artifacts/GroupMemberTimetable_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/artifacts/GroupMemberTimetable_jar.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/GroupMemberTimetable.jar" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/Members.mv.db" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/config.yml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/GroupManager/GroupMemberManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/GroupManager/GroupMemberManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/GroupMemberTimetable.jar" beforeDir="false" afterPath="$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar/GroupMemberTimetable.jar" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/cos/hudie/hk/groupTimeTable/Database/SQLite/Query.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -53,42 +53,42 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;Application.Unnamed.executor&quot;: &quot;Run&quot;,
-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
-    &quot;Maven.GroupMemberTimetable [-B,package,--file...].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [clean,install...].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [clean].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [install:install-file...].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-install-plugin:3.1.1:install].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:jar].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:test-jar].executor&quot;: &quot;Run&quot;,
-    &quot;Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources].executor&quot;: &quot;Run&quot;,
-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.JavaDocs&quot;: &quot;true&quot;,
-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/TerenceKam/Documents/GitHub/GroupMemberTimetable&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15294118&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Main.executor": "Run",
+    "Application.Unnamed.executor": "Run",
+    "Downloaded.Files.Path.Enabled": "false",
+    "Maven.GroupMemberTimetable [-B,package,--file...].executor": "Run",
+    "Maven.GroupMemberTimetable [clean,install...].executor": "Run",
+    "Maven.GroupMemberTimetable [clean].executor": "Run",
+    "Maven.GroupMemberTimetable [install:install-file...].executor": "Run",
+    "Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor": "Run",
+    "Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-install-plugin:3.1.1:install].executor": "Run",
+    "Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:jar].executor": "Run",
+    "Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-jar-plugin:3.3.0:test-jar].executor": "Run",
+    "Maven.GroupMemberTimetable [org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources].executor": "Run",
+    "Repository.Attach.Annotations": "false",
+    "Repository.Attach.JavaDocs": "true",
+    "Repository.Attach.Sources": "false",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "master",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/TerenceKam/Downloads/lib/sqlite-jdbc-3.32.3.2.jar",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.stylelint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.stylelint": "",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Artifacts",
+    "project.structure.proportion": "0.15294118",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="ImportExportFile.TargetDir.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
@@ -117,7 +117,8 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-js-predefined-1d06a55b98c1-e293885f7bc4-JavaScript-IU-241.11761.10" />
+        <option value="jdk-17.0.10-corretto-17.0.10-f644763e9732-24fca987" />
+        <option value="jdk-21.0.2-openjdk-21.0.2-f644763e9732-c0c073db" />
       </set>
     </attachedChunks>
   </component>
@@ -137,6 +138,7 @@
       <workItem from="1709657781622" duration="3730000" />
       <workItem from="1709700316072" duration="344000" />
       <workItem from="1709708556550" duration="1380000" />
+      <workItem from="1709710608595" duration="1837000" />
     </task>
     <task id="LOCAL-00001" summary="/">
       <option name="closed" value="true" />
Index: .idea/artifacts/GroupMemberTimetable_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ArtifactManager\">\r\n  <artifact type=\"jar\" name=\"GroupMemberTimetable:jar\">\r\n    <output-path>$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar</output-path>\r\n    <root id=\"archive\" name=\"GroupMemberTimetable.jar\">\r\n      <element id=\"directory\" name=\"META-INF\">\r\n        <element id=\"file-copy\" path=\"$PROJECT_DIR$/META-INF/MANIFEST.MF\" />\r\n      </element>\r\n      <element id=\"module-output\" name=\"GroupMemberTimetable\" />\r\n      <element id=\"extracted-dir\" path=\"$USER_HOME$/Downloads/sqlite-jdbc-3.32.3.2.jar\" path-in-jar=\"/\" />\r\n      <element id=\"extracted-dir\" path=\"$USER_HOME$/Downloads/h2-2.2.224.jar\" path-in-jar=\"/\" />\r\n      <element id=\"extracted-dir\" path=\"$USER_HOME$/Downloads/aspose-cells-24.2.jar\" path-in-jar=\"/\" />\r\n      <element id=\"extracted-dir\" path=\"$USER_HOME$/Downloads/mysql-connector-j-8.3.0.jar\" path-in-jar=\"/\" />\r\n    </root>\r\n  </artifact>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/GroupMemberTimetable_jar.xml b/.idea/artifacts/GroupMemberTimetable_jar.xml
--- a/.idea/artifacts/GroupMemberTimetable_jar.xml	(revision 0db71fe8b6fcd9b25960b279d32301751526781d)
+++ b/.idea/artifacts/GroupMemberTimetable_jar.xml	(date 1709711770390)
@@ -2,14 +2,11 @@
   <artifact type="jar" name="GroupMemberTimetable:jar">
     <output-path>$PROJECT_DIR$/out/artifacts/GroupMemberTimetable_jar</output-path>
     <root id="archive" name="GroupMemberTimetable.jar">
-      <element id="directory" name="META-INF">
-        <element id="file-copy" path="$PROJECT_DIR$/META-INF/MANIFEST.MF" />
-      </element>
       <element id="module-output" name="GroupMemberTimetable" />
-      <element id="extracted-dir" path="$USER_HOME$/Downloads/sqlite-jdbc-3.32.3.2.jar" path-in-jar="/" />
-      <element id="extracted-dir" path="$USER_HOME$/Downloads/h2-2.2.224.jar" path-in-jar="/" />
-      <element id="extracted-dir" path="$USER_HOME$/Downloads/aspose-cells-24.2.jar" path-in-jar="/" />
-      <element id="extracted-dir" path="$USER_HOME$/Downloads/mysql-connector-j-8.3.0.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$USER_HOME$/Downloads/lib/aspose-cells-24.2.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$USER_HOME$/Downloads/lib/h2-2.2.224.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$USER_HOME$/Downloads/lib/mysql-connector-j-8.3.0.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$USER_HOME$/Downloads/lib/sqlite-jdbc-3.32.3.2.jar" path-in-jar="/" />
     </root>
   </artifact>
 </component>
\ No newline at end of file
Index: src/main/resources/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/META-INF/MANIFEST.MF b/src/main/resources/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1709711765883)
+++ b/src/main/resources/META-INF/MANIFEST.MF	(date 1709711765883)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: cos.hudie.hk.groupTimeTable.Main
+
